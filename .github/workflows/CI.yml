name: CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: master
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Read Version
      id: app_properties
      uses: ActionsTools/read-json-action@main
      with:
        file_path: "app.json"
    - name: Print Version
      run: |
        echo "Version: ${{steps.app_properties.outputs.version}}"
    - name: Setting Virtual Environment
      run: |
        python -m venv venv
        source venv/bin/activate
    - name: Installing Dependencies
      run: |
        pip install -r requirements.txt
    - name: Linting with Flake8
      run: |
        flake8 src testing
    - name: Unit Testing
      run: |
        export PYTHONPATH="$PYTHONPATH:$PWD/src"
        pytest ./testing/unit/
    - name: Integration Testing
      run: |
        if [ -f operations.db ]; then
          rm operations.db
        fi
        cp env/local.env .env
        screen -dmS uvicorn python -B -m uvicorn src.main:app --host 127.0.0.1 --port 8000 && sleep 5
        pytest ./testing/integration/
    - name: Create .env file from environment variables
        env:
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASS: ${{ vars.DB_PASS }}
          DB_NAME: ${{ vars.DB_NAME }}
          ENV: prod
        run: |
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASS=$DB_PASS" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "ENV=$ENV" >> .env
    - name: Build the Docker Image
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      run: |
        docker build -t $DOCKER_USERNAME/banco_api:${{steps.app_properties.outputs.version}} -f Dockerfile .
        docker tag $DOCKER_USERNAME/banco_api:${{steps.app_properties.outputs.version}} $DOCKER_USERNAME/banco_api:latest
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD docker.io
    - name: Push to Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      run: |
        docker push $DOCKER_USERNAME/banco_api:${{steps.app_properties.outputs.version}}
        docker push $DOCKER_USERNAME/banco_api:latest 


